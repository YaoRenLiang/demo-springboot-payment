<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.free.yrl</groupId>
    <artifactId>demo-springboot-payment</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo-springboot-payment</name>
    <packaging>war</packaging>

    <properties>
        <java.version>1.8</java.version>
        <spring.boot.maven.plugin>2.1.0.RELEASE</spring.boot.maven.plugin>
        <log4j>1.2.17</log4j>
        <gson>2.8.6</gson>
        <swagger2.version>2.9.2</swagger2.version>
        <swagger.ui.version>2.9.2</swagger.ui.version>
        <swagger.bootstrap.ui>1.9.3</swagger.bootstrap.ui>
        <swagger.models>1.5.21</swagger.models>
        <mybatis.spring.boot.starter>1.3.2</mybatis.spring.boot.starter>
    </properties>

    <parent>
        <version>2.1.0.RELEASE</version>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
    </parent>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--spring-boot测试组件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--整合lombok 框架-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j}</version>
        </dependency>

        <!--整合谷歌json-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson}</version>
        </dependency>

        <!--整合web-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--整合aop-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--整合swagger2接口文档生成start-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.ui.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>swagger-bootstrap-ui</artifactId>
            <version>${swagger.bootstrap.ui}</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger2.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.swagger</groupId>
                    <artifactId>swagger-models</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-models</artifactId>
            <version>${swagger.models}</version>
        </dependency>
        <!--接口文档生成end-->

        <!--PayPal checkout-->
        <dependency>
            <groupId>com.paypal.sdk</groupId>
            <artifactId>checkout-sdk</artifactId>
            <version>LATEST</version>
        </dependency>

        <!--PayPal Core-->
        <dependency>
            <groupId>com.paypal.sdk</groupId>
            <artifactId>paypal-core</artifactId>
            <version>LATEST</version>
        </dependency>

        <!--整合mybatis-->
        <!--引入这个jar必须在配置文件中引入数据源，因为这个jar每次项目启动就会去检查是否有数据源，没有的话就报错，所以不能在父工程里引入-->
        <!--或者在spring boot入口加上@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)禁止springboot自动注入数据源配置-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.spring.boot.starter}</version>
        </dependency>

        <!--整合Mysql驱动-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

    </dependencies>

    <build>
        <!--按照artifactId作为包名-->
        <finalName>${project.artifactId}</finalName>
        <plugins>

            <!--SpringBoot的构建的插件，打war包，不然报错，找不到入口，如果作为单纯的jar不去启动，需要去掉这个plugin或加上一段代码，不然其他项目引入找不到包-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.maven.plugin}</version>
            </plugin>

            <!--maven打包跳过测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
